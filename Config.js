const CONFIG = {
  // Your Google Drive Folder ID for PDFs
  ADMISSIONS_PDF_FOLDER_ID: '1z9SkGw0JXQmlj_NjLcK7Cal1Vvgctcwr',

  // Sheet Names
  ADMISSIONS_SHEET_NAME: 'Admissions',
  INQUIRY_SHEET_NAME: 'DF', // Your main inquiry sheet
  STUDENT_DATA_SHEET_NAME: 'STUDENT DATA',
  FEES_SHEET_NAME: 'FEES',
  LOGIN_SHEET_NAME: 'LOGIN',
  DROPDOWN_SHEET_NAME: 'DROPDOWN',
  AUDIT_LOG_SHEET_NAME: 'AuditLog',
  RECEIPTS_SHEET_NAME: 'Receipts',

  DEFAULT_USER: 'Anonymous',
  ROLES: {
    ADMIN: 'admin'
  },

  // --- Column Mappings for INQUIRY_SHEET_NAME ('DF') ---
  // These indices (0-based) must match the column order in your 'DF' Google Sheet precisely,
  // assuming Column A is an auto-generated timestamp.
  //
  // Your sheet columns are effectively:
  // Col A: [Timestamp (Auto-generated by appendRow)]
  // Col B: Date (from form)
  // Col C: Aadhar
  // Col D: Full Name
  // Col E: Qualification
  // Col F: Phone Number
  // Col G: WhatsApp Number
  // Col H: Parents Number
  // Col I: Email Address
  // Col J: Age
  // Col K: Address
  // Col L: Interested Course
  // Col M: Inquiry Taken By
  // Col N: Branch
  // Col O: Follow-up Date
  // Col P: Notes
  // Col Q: Admission Status
  // Col R: Admission Date
  // Col S: Batch Assigned
  // Col T: Logged In User ID (if appended after form data)

  INQUIRY_COLUMN_INDEX: {
    // These indices are 0-based relative to the *data array that will be appended*,
    // where the Timestamp (Col A) is automatically added by Google Sheets and isn't
    // part of the data you explicitly pass in `appendRow([Timestamp, ...rowData])`.
    // So, if your `rowData` starts with 'Date (from form)' which goes into Col B,
    // its index in `rowData` is 0.
    // However, for lookup (getValues()), the Timestamp *is* included, so indices will shift.

    DATE_FORM: 0,           // Corresponds to Col B in sheet
    AADHAAR: 1,             // Corresponds to Col C in sheet
    FULL_NAME: 2,           // Corresponds to Col D in sheet
    QUALIFICATION: 3,       // Corresponds to Col E in sheet
    PHONE_NUMBER: 4,        // Corresponds to Col F in sheet
    WHATSAPP_NUMBER: 5,     // Corresponds to Col G in sheet
    PARENTS_NUMBER: 6,      // Corresponds to Col H in sheet
    EMAIL_ADDRESS: 7,       // Corresponds to Col I in sheet
    AGE: 8,                 // Corresponds to Col J in sheet
    ADDRESS: 9,             // Corresponds to Col K in sheet
    INTERESTED_COURSE: 10,  // Corresponds to Col L in sheet
    INQUIRY_TAKEN_BY: 11,   // Corresponds to Col M in sheet
    BRANCH: 12,             // Corresponds to Col N in sheet
    FOLLOW_UP_DATE: 13,     // Corresponds to Col O in sheet
    NOTES: 14,              // Corresponds to Col P in sheet
    ADMISSION_STATUS: 15,   // Corresponds to Col Q in sheet
    ADMISSION_DATE: 16,     // Corresponds to Col R in sheet
    BATCH_ASSIGNED: 17,     // Corresponds to Col S in sheet
    LOGGED_IN_USER_ID: 18   // Corresponds to Col T in sheet
  },

  // --- Column Mappings for Aadhar Lookup (within INQUIRY_SHEET_NAME 'DF') ---
  // These indices (0-based) must match the column order in your 'DF' Google Sheet precisely,
  // when you use `getDataRange().getValues()`. This method includes ALL columns,
  // including the auto-generated Timestamp in Column A.
  //
  // Col A: Timestamp (index 0 in getValues() array)
  // Col B: Date (index 1)
  // Col C: Aadhar (index 2)
  // ...and so on.
  //
  // Therefore, these indices will be one higher than their corresponding visual column
  // if column A is Timestamp.

  AADHAAR_LOOKUP: {
    SHEET_NAME: 'DF', // The sheet where Aadhar records are stored for lookup
    // These indices are 0-based from the `getValues()` array
    TIMESTAMP_COL: 0,            // Column A
    DATE_FORM_COL: 1,            // Column B
    AADHAAR_COL: 2,              // Column C
    FULL_NAME_COL: 3,            // Column D
    QUALIFICATION_COL: 4,        // Column E
    PHONE_NUMBER_COL: 5,         // Column F
    WHATSAPP_NUMBER_COL: 6,      // Column G
    PARENTS_NUMBER_COL: 7,       // Column H
    EMAIL_ADDRESS_COL: 8,        // Column I
    AGE_COL: 9,                  // Column J
    ADDRESS_COL: 10,             // Column K
    INTERESTED_COURSE_COL: 11,   // Column L
    INQUIRY_TAKEN_BY_COL: 12,    // Column M
    BRANCH_COL: 13,              // Column N
    FOLLOW_UP_DATE_COL: 14,      // Column O
    NOTES_COL: 15,               // Column P
    ADMISSION_STATUS_COL: 16,    // Column Q
    ADMISSION_DATE_COL: 17,      // Column R
    BATCH_ASSIGNED_COL: 18,      // Column S
    LOGGED_IN_USER_ID_COL: 19    // Column T
  }
};