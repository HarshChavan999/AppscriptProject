name: Deploy Google Apps Script

on:
  push:
    branches:
      - main # Trigger this workflow when code is pushed to the 'main' branch
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read' # Required for checkout
      id-token: 'write' # REQUIRED for Workload Identity Federation (to get an OIDC token)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your preferred Node.js version (e.g., '18', '20')
          cache: 'npm' # Cache npm dependencies for faster builds

      - name: Install clasp
        run: npm install -g @google/clasp

      - name: Authenticate to Google Cloud (Workload Identity Federation)
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set clasp project (optional, if .clasp.json not in root)
        # This ensures clasp knows which project to work with.
        # You might not need this if your local .clasp.json is pushed and correct.
        # However, it's safer for CI/CD environments.
        run: |
          # Ensure .clasp.json exists for clasp to work with the project
          # The 'google-github-actions/auth' will set ADC, which clasp uses
          # We just need to tell clasp which script project ID to target
          echo "{\"scriptId\":\"${{ secrets.APPS_SCRIPT_PROJECT_ID }}\"}" > .clasp.json


      - name: Push Apps Script code to Google
        run: clasp push # clasp will use ADC set by 'auth' action and project ID from .clasp.json

      - name: Create new Apps Script Deployment
        # This creates a new versioned deployment every time the workflow runs.
        # Recommended for clear deployment history.
        run: clasp deploy --description "Deployed via GitHub Actions: ${{ github.sha }}" # --versionNumber <optional_version_number>

      # Optional: Update an existing web app/API executable deployment
      # If you have a fixed deployment ID (e.g., for a web app URL)
      # - name: Update existing Apps Script Deployment
      #   run: clasp deploy --deploymentId <YOUR_EXISTING_DEPLOYMENT_ID> --description "Updated via GitHub Actions: ${{ github.sha }}"

      # Optional: Run a specific Apps Script function after deployment (e.g., for tests)
      # - name: Run Apps Script Function
      #   run: clasp run 'myTestFunction'
      #   env:
      #     CLASP_RUN_FUNCTION_ARG1: 'value for arg1'
      #     CLASP_RUN_FUNCTION_ARG2: 'value for arg2'
